@model MVCCodefirst.Models.Ders

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    //İstemciden istediğimiz bilgileri araya sızıntı olmasın başka kaynaklar erişmasin diye bir key tutuyor.
    //bukey istemcideki keyle eşleşirse gönderiyor bilgileri
    //bunu controllerde validateforgery token karşılayacak
    <div class="form-horizontal">
        <h4>Ders</h4>
        <hr />

        @Html.ValidationSummary(true,"",new {@class="text-danger" })
        <div class="form-group">
         
            <div class="col-md-10">
                @Html.LabelFor(model => model.DersAdi, htmlAttributes: new { @class = "control-label-col-md-2" })
                @Html.EditorFor(model=>model.DersAdi,new { htmlAttributes = new { @class = "form-control" } } )
                @Html.ValidationMessageFor(model=>model.DersAdi, "",new {@class="text-danger" })
            </div>
            <div class="col-md-10">
                @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label-col-md-2" })
                @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
            </div>
            
        </div>
        <div class="form-group ">

            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>


    </div>
    <div>
        @Html.ActionLink("back to list","Index")

    </div>
    @section Scripts{
        @Scripts.Render("~/bundles/jqueryval")
}

}

